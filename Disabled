local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:getService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

--- Aimbot Settings
getgenv().AimbotEnabled = true
getgenv().TeamCheck = false --You can toggle on and off
getgenv().AimPart = "Head"
getgenv().Sensitivity = 0.4 ---- 0 for snap, higher for legit
---Fov Circle Settings

getgenv().CircleSides = 12
getgenv().CircleColor = Color3.fromRGB(255, 105, 5)
getgenv().CircleTransparency = 0.7
getgenv().CircleRadius = 100
getgenv().CircleFilled = false
getgenv().CircleVisible = false
getgenv().CircleThickness = 7

local FOVCircle = Drawing.new("Circle")

FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

local function GetClosestPlayer()
	local MaximumDistance = getgenv().CircleRadius
	local Target = nil
	print("MaximumDistance: ", MaximumDistance)

	for _, v in next, Players:GetPlayers() do
		print("v: ", v)
		if v.Name ~= LocalPlayer.Name then
			if getgenv().TeamCheck == true then
				if v.Team ~= LocalPlayer.Team then
					if v.Character ~= nil then
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
							if
								v.Character:FindFirstChild("Humanoid") ~= nil
								and v.Character:FindFirstChild("Humanoid").Health ~= 0
							then
								local ScreenPoint = Camera:WorldToScreenPoint(
									v.Character:WaitForChild("HumanoidRootPart", math.hudge).Position
								)
								print("ScreenPoint: ", ScreenPoint)
								local VectorDistance = (Vector2.new(
									UserInputService:GetMouseLocation().X,
									UserInputService:GetMouseLocation().Y
								) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

								if VectorDistance < MaximumDistance then
									Target = v
								end
							end
						end
					end
				end
			else
				if v.Character ~= nil then
					if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
						if
							v.Character:FindFirstChild("Humanoid") ~= nil
							and v.Character:FindFirstChild("Humanoid").Health ~= 0
						then
							local ScreenPoint = Camera:WorldToScreenPoint(
								v.Character:WaitForChild("HumanoidRootPart", math.hudge).Position
							)
							local VectorDistance = (Vector2.new(
								UserInputService:GetMouseLocation().X,
								UserInputService:GetMouseLocation().Y
							) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

							if VectorDistance < MaximumDistance then
								Target = v
							end
						end
					end
				end
			end
		end
	end
	return Target
end

UserInputService.InputBegan:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = true
	end
end)

UserInputService.InputEnded:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = false
	end
end)
Drawing.new("Circle")

RunService.RenderStepped:Connect(function()
	FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
	FOVCircle.Radius = getgenv().CircleRadius
	FOVCircle.Filled = getgenv().CircleFilled
	FOVCircle.Color = getgenv().CircleColor
	FOVCircle.Visible = getgenv().CircleVisible
	FOVCircle.Radius = getgenv().CircleRadius
	FOVCircle.Transparency = getgenv().CircleTransparency
	FOVCircle.NumSides = getgenv().CircleSides
	FOVCircle.Thickness = getgenv().CircleThickness
	local target = GetClosestPlayer()
	if Holding == true and getgenv().AimbotEnabled == true and target then
		TweenService:Create(
			Camera,
			TweenInfo.new(getgenv().Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
			{ CFrame = CFrame.new(Camera.CFrame.Position, target.Character[getgenv().AimPart].Position) }
		):Play()
	end
end)
